@model UpFit__main.Models.Food
@{
    ViewBag.Title = "AddFood"; 
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create Food</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Food</h4>
    @Html.ValidationSummary(true, "Some rows are not filled", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.DropDownListFor(model => model.type, new List<SelectListItem>
    {
                new SelectListItem { Text = "Fruits", Value = "1" },
                new SelectListItem { Text = "Vegetables", Value = "2" },
                new SelectListItem { Text = "Meat", Value = "3" },
                new SelectListItem { Text = "Seafood", Value = "4" },
                new SelectListItem { Text = "Dairy Products", Value = "5" },
                new SelectListItem { Text = "Grains", Value = "6" },
                new SelectListItem { Text = "Nuts and Seeds", Value = "7" },
                new SelectListItem { Text = "Bakery", Value = "8" },
                new SelectListItem { Text = "Beverages", Value = "9" },
                new SelectListItem { Text = "Condiments", Value = "10" },
                new SelectListItem { Text = "Sweets", Value = "11" },
            }, "Type of food", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.calories, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.calories, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.calories, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.proteins, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.proteins, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.proteins, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fats, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fats, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fats, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.carbs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.carbs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.carbs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fibers, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fibers, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fibers, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.vitamin_A, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vitamin_A, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vitamin_A, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.vitamin_B, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vitamin_B, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vitamin_B, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.vitamin_C, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vitamin_C, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vitamin_C, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.vitamin_D, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vitamin_D, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vitamin_D, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.vitamin_E, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vitamin_E, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vitamin_E, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Home")
</div>
